stages:
  - install
  - lint
  - test
  - report

variables:
  POETRY_VERSION: "1.7.1"  # Specify Poetry version for consistency
  POETRY_HOME: "$CI_PROJECT_DIR/.poetry"
  POETRY_CACHE_DIR: "$CI_PROJECT_DIR/.poetry-cache"
  VENV_PATH: "$CI_PROJECT_DIR/.venv"

# Base configuration that other jobs will inherit
.default_config:
  image: python:3.11
  cache:
    key: ${CI_COMMIT_REF_SLUG}
    paths:
      - .poetry-cache/
      - .venv/

  before_script:
    - python -V
    - python -m pip install --upgrade pip
    - pip install poetry==${POETRY_VERSION}
    - poetry config virtualenvs.in-project true
    - poetry env info
    - poetry show

# Install project dependencies
install:
  extends: .default_config
  stage: install
  script:
    - poetry install --no-interaction --no-ansi
  artifacts:
    paths:
      - .venv/
      - poetry.lock
    expire_in: 1 hour

# Code quality checks
lint:
  extends: .default_config
  stage: lint
  script:
    - poetry run black --check src tests
    - poetry run isort --check-only src tests
  needs:
    - install
  only:
    - develop
    - main
    - /^release-.*$/

# Fast tests for development
test-fast:
  extends: .default_config
  stage: test
  script:
    - poetry run pytest -v -m "not slow" 
        --cov=src 
        --cov-report=xml 
        --cov-report=term 
        --junitxml=report.xml
  coverage: '/TOTAL.+ ([0-9]{1,3}%)/'
  artifacts:
    when: always
    paths:
      - .coverage
      - coverage.xml
      - report.xml
    reports:
      junit: report.xml
      coverage_report:
        coverage_format: cobertura
        path: coverage.xml
  needs:
    - install
  only:
    - develop
    - merge_requests
# Comprehensive tests including slow ones
test-slow:
  extends: .default_config
  stage: test
  script:
    - poetry run pytest -v -m "slow" 
        --cov=src 
        --cov-report=xml 
        --cov-report=term 
        --junitxml=slow-report.xml
  artifacts:
    when: always
    paths:
      - .coverage.slow
      - coverage.xml
      - slow-report.xml
    reports:
      junit: slow-report.xml
  needs:
    - install
  only:
    - main
    - /^release-.*$/
  when: manual
# Generate coverage reports
coverage-report:
  extends: .default_config
  stage: report
  script:
    - mv .coverage.slow .coverage.slow.bak || true
    - poetry install
    - poetry run coverage combine .coverage .coverage.slow.bak || true
    - poetry run coverage report
    - poetry run coverage html
  artifacts:
    paths:
      - htmlcov
    reports:
      coverage_report:
        coverage_format: cobertura
        path: coverage.xml
  needs:
    - job: test-fast
      optional: true
    - job: test-slow
      optional: true
  only:
    - main
    - /^release-.*$/