name: Python CI

on:
  push:
    branches:
      - develop
      - main
      - release-*
  pull_request:
    branches:
      - develop
      - main
      - release-*

jobs:
  install:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.11

      - name: Install Poetry
        run: |
          python -m pip install --upgrade pip
          pip install poetry==1.7.1

      - name: Configure Poetry
        run: |
          poetry config virtualenvs.in-project true

      - name: Install dependencies
        run: |
          poetry install --no-interaction --no-ansi

      - name: Verify Poetry environment
        run: |
          poetry env info
          poetry show

    outputs:
      venv-path: .venv/

  lint:
    runs-on: ubuntu-latest
    needs: install
    if: github.ref == 'refs/heads/develop' || github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/heads/release-')
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.11

      - name: Install Poetry
        run: |
          python -m pip install --upgrade pip
          pip install poetry==1.7.1

      - name: Configure Poetry
        run: |
          poetry config virtualenvs.in-project true

      - name: Install dependencies
        run: |
          poetry install --no-interaction --no-ansi

      - name: Run Black
        run: poetry run black --check src tests

      - name: Run isort
        run: poetry run isort --check-only src tests

  test-fast:
    runs-on: ubuntu-latest
    needs: install
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.11

      - name: Install Poetry
        run: |
          python -m pip install --upgrade pip
          pip install poetry==1.7.1

      - name: Configure Poetry
        run: |
          poetry config virtualenvs.in-project true

      - name: Install dependencies
        run: |
          poetry install --no-interaction --no-ansi

      - name: Run tests (fast)
        run: |
          poetry run pytest -v -m "not slow" --cov=src --cov-report=xml --cov-report=term --junitxml=report.xml

      - name: Upload test results to Codecov
        uses: codecov/codecov-action@v3
        with:
          file: coverage.xml
          flags: unittests
          name: codecov-umbrella

      - name: Upload fast test report as artifact
        uses: actions/upload-artifact@v3
        with:
          name: fast-test-report
          path: report.xml

  test-slow:
    runs-on: ubuntu-latest
    needs: install
    if: github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/heads/release-')
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.11

      - name: Install Poetry
        run: |
          python -m pip install --upgrade pip
          pip install poetry==1.7.1

      - name: Configure Poetry
        run: |
          poetry config virtualenvs.in-project true

      - name: Install dependencies
        run: |
          poetry install --no-interaction --no-ansi

      - name: Run tests (slow)
        run: |
          poetry run pytest -v -m "slow" --cov=src --cov-report=xml --cov-report=term --junitxml=slow-report.xml

      - name: Upload test results to Codecov
        uses: codecov/codecov-action@v3
        with:
          file: slow-report.xml
          flags: slow-tests
          name: codecov-slow

      - name: Upload slow test report as artifact
        uses: actions/upload-artifact@v3
        with:
          name: slow-test-report
          path: slow-report.xml

  coverage-report:
    runs-on: ubuntu-latest
    needs: [test-fast, test-slow]
    if: github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/heads/release-')
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Upload code coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          file: coverage.xml
          flags: unittests
          name: codecov-final-report
      - name: Upload coverage reports to Codecov
        uses: codecov/codecov-action@v5
        with:
         token: ${{ secrets.CODECOV_TOKEN }}